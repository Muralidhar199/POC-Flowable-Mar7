<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd"
             xmlns:flowable="http://flowable.org/bpmn"
             id="definitions"
             name="Refund Request Process" targetNamespace="">


    <process id="refundRequestProcess" name="Refund Request Process" isExecutable="true">

        <!-- Start Event -->
        <startEvent id="startEvent" name="Start Refund Request"/>

        <!-- Sequence Flow to Gateway -->
        <sequenceFlow id="sequenceFlow1" sourceRef="startEvent" targetRef="exclusiveGateway"/>

        <!-- Exclusive Gateway -->
        <exclusiveGateway id="exclusiveGateway" name="Decision Point" />


        <!-- ApprovalTask -->
        <sequenceFlow id="approvalFlow" sourceRef="exclusiveGateway" targetRef="ApprovalTask">
            <conditionExpression xsi:type="tFormalExpression">${status == 'approved'}</conditionExpression>
        </sequenceFlow>
        <serviceTask id="ApprovalTask" name="approval Task" flowable:class="com.example.makerchecker.services.RefundServiceTask" >
            <incoming>approvalFlow</incoming>
            <outgoing>sequenceFlow5</outgoing>
        </serviceTask>

        <sequenceFlow id="sequenceFlow5" sourceRef="ApprovalTask" targetRef="serviceTask2"/>


        <serviceTask id="serviceTask2" name="Send Refund Notification" flowable:class="com.example.makerchecker.services.NotificationServiceTask">
            <incoming>sequenceFlow5</incoming>
            <outgoing>sequenceFlow6</outgoing>
        </serviceTask>

        <sequenceFlow id="sequenceFlow6" sourceRef="serviceTask2" targetRef="endEvent"/>

        <!--RejectedTask -->
        <sequenceFlow id="rejectedFlow" sourceRef="exclusiveGateway" targetRef="RejectedTask">
            <conditionExpression xsi:type="tFormalExpression">${status == 'rejected'}</conditionExpression>
        </sequenceFlow>
        <serviceTask id="RejectedTask" name="Rejected Task" flowable:class="com.example.makerchecker.services.RejectedTask" />


        <!-- CancelledTask -->
        <sequenceFlow id="CancelledFlow" sourceRef="exclusiveGateway" targetRef="CancelledTask">
            <conditionExpression xsi:type="tFormalExpression">${status == 'cancelled'}</conditionExpression>
        </sequenceFlow>
        <serviceTask id="CancelledTask" name="Cancelled Task" flowable:class="com.example.makerchecker.services.CancelledTask" />

        <!-- End Event -->
        <endEvent id="endEvent" name="End">
            <incoming>approvalFlow</incoming>
            <incoming>rejectedFlow</incoming>
            <incoming>CancelledFlow</incoming>
        </endEvent>

    </process>

</definitions>
